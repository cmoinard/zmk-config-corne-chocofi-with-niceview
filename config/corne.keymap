/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <225>;
    flavor = "balanced";
};

/ {
    combos {
        compatible = "zmk,combos";

        Reset {
            bindings = <&sys_reset>;
            key-positions = <5 29 6 30>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q    &lt 5 W         &lt 3 E           &kp R           &kp T        &kp Y      &kp U            &kp I              &kp O           &kp P     &none
&none  &kp A    &mt LEFT_ALT S  &mt LEFT_SHIFT D  &mt LCTRL F     &kp G        &kp H      &mt RCTRL J      &mt RIGHT_SHIFT K  &mt LEFT_ALT L  &kp SEMI  &none
&none  &lt 4 Z  &kp X           &kp C             &kp V           &kp B        &kp N      &kp M            &kp COMMA          &kp DOT         &kp FSLH  &none
                                &mo 1             &sk LEFT_SHIFT  &kp SPACE    &kp SPACE  &sk RIGHT_SHIFT  &mo 2
            >;
        };

        move_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &bt BT_SEL 0   &bt BT_SEL 1   &trans          &trans          &trans             &kp DELETE     &kp HOME  &kp UP_ARROW  &kp END    &kp PAGE_UP    &trans
&trans  &kp LEFT_META  &kp LEFT_ALT   &kp LEFT_SHIFT  &kp LCTRL       &kp PRINTSCREEN    &kp BACKSPACE  &kp LEFT  &kp DOWN      &kp RIGHT  &kp PAGE_DOWN  &trans
&trans  &trans         &kp LC(SLASH)  &kp LC(O)       &kp LC(PERIOD)  &trans             &kp F12        &kp F11   &kp F10       &kp F9     &kp F5         &trans
                                      &trans          &trans          &trans             &kp SPACE      &trans    &trans
            >;
        };

        code_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp PIPE   &kp RA(W)  &kp RA(E)  &kp AMPERSAND  &kp EXCLAMATION    &kp AT_SIGN  &kp HOME  &kp UP_ARROW       &kp END     &trans  &trans
&trans  &kp RA(A)  &kp RA(S)  &kp RA(D)  &kp RA(F)      &kp EQUAL          &kp DOLLAR   &kp LEFT  &kp DOWN_ARROW     &kp RIGHT   &trans  &trans
&trans  &kp LS(Z)  &kp RA(X)  &kp RA(C)  &kp LS(G)      &kp LS(C)          &kp RA(P)    &kp SQT   &kp DOUBLE_QUOTES  &kp PERIOD  &trans  &trans
                              &trans     &trans         &kp SPACE          &trans       &trans    &trans
            >;
        };

        digits_layer {
            bindings = <
&trans  &kp K_MUTE  &kp C_VOL_DN  &trans  &kp C_VOLUME_UP   &trans             &kp PLUS      &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp MINUS   &trans
&trans  &trans      &trans        &trans  &kp K_PLAY_PAUSE  &kp LOCKING_NUM    &kp SLASH     &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_N0   &trans
&trans  &trans      &trans        &trans  &trans            &trans             &kp ASTERISK  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp PERIOD  &trans
                                  &trans  &trans            &trans             &trans        &trans     &trans
            >;
        };

        f_keys_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        symbols_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp LS(PERIOD)  &kp PERCENT       &kp LS(NUMBER_1)   &kp LS(NUMBER_4)  &kp LS(NUMBER_6)  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp RA(W)       &kp AT_SIGN       &kp LS(N9)         &kp LS(N0)        &kp HASH          &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp GRAVE       &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp BACKSLASH     &kp SLASH         &trans
                        &trans  &trans  &trans    &trans          &trans            &trans
            >;
        };
    };
};
